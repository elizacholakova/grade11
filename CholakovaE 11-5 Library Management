import java.util.Scanner;

class Book {
    private String title;
    private String author;
    private int yearPublished;
    private String borrowerName;

    public Book(String title, String author, int yearPublished) {
        this.title = title;
        this.author = author;
        this.yearPublished = yearPublished;
        this.borrowerName = null;
    }

    public String getDetails() {
        if (borrowerName == null) {
            return "\"" + title + "\" by " + author + ", published in " + yearPublished + ", Available to borrow";
        } else {
            return "\"" + title + "\" by " + author + ", published in " + yearPublished + "Borrowed by: " + borrowerName;
        }
    }

    public void updateBookInfo(String newTitle, String newAuthor, int newYearPublished) {
        this.title = newTitle;
        this.author = newAuthor;
        this.yearPublished = newYearPublished;
    }

    public void borrowBook(String borrowerName) {
        if (this.borrowerName == null) {
            this.borrowerName = borrowerName;
            System.out.println("\"" + title + "\"" + " has been borrowed by " + borrowerName);
        } else {
            System.out.println("\"" + title + "\"" + " is already borrowed by " + this.borrowerName);
        }
    }

    public void returnBook() {
        if (this.borrowerName != null) {
            System.out.println("\"" + title + "\"" + " has been returned by " + this.borrowerName);
            this.borrowerName = null;
        } else {
            System.out.println("\"" + title + "\"" + " is not currently borrowed.");
        }
    }

    public String getBorrowerName() {
        return borrowerName;
    }

    public String getTitle() {
        return title;
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Book[] books = {
                new Book("The Great Gatsby", "F. Scott Fitzgerald", 1925),
                new Book("1984", "George Orwell", 1949),
                new Book("To Kill a Mockingbird", "Harper Lee", 1960)
        };

        while (true) {
            System.out.println("\nLibrary Management System");
            System.out.println("1. Display Library");
            System.out.println("2. Borrow Book");
            System.out.println("3. Return Book");
            System.out.println("4. Exit");
            System.out.print("Choose an option: ");
            int choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1:
                    displayLibrary(books);
                    break;
                case 2:
                    borrowBook(books, scanner);
                    break;
                case 3:
                    System.out.print("Enter the title of the book to return: ");
                    String searchTitle = scanner.nextLine();
                    returnBook(books, searchTitle);
                    break;
                case 4:
                    System.out.println("Exiting...");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    public static void displayLibrary(Book[] books) {
        System.out.println("\nLibrary Inventory:");
        for (Book book : books) {
            System.out.println(book.getDetails());
        }
    }

    public static void borrowBook(Book[] books, Scanner scanner) {
        System.out.print("Enter the title of the book to borrow: ");
        String title = scanner.nextLine();
        Book book = findBookByTitle(books, title);
        if (book != null) {
            System.out.print("Enter your name: ");
            String borrowerName = scanner.nextLine();
            book.borrowBook(borrowerName);
        } else {
            System.out.println("Book not found.");
        }
    }

    public static void returnBook(Book[] books, String searchTitle) {
        Book book = findBookByTitle(books, searchTitle);
        if (book != null) {
            book.returnBook();
        } else {
            System.out.println("Book not found.");
        }
    }


    public static Book findBookByTitle(Book[] books, String title) {
        for (Book book : books) {
            if (book.getTitle().equalsIgnoreCase(title)) {
                return book;
            }
        }
        return null;
    }
}
